// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_seq_rec2_plus
NumericVector rcpp_seq_rec2_plus(NumericVector inits, int n, NumericVector s, NumericVector m, int form, bool rev);
RcppExport SEXP _squarebrackets_rcpp_seq_rec2_plus(SEXP initsSEXP, SEXP nSEXP, SEXP sSEXP, SEXP mSEXP, SEXP formSEXP, SEXP revSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type inits(initsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s(sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type form(formSEXP);
    Rcpp::traits::input_parameter< bool >::type rev(revSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_seq_rec2_plus(inits, n, s, m, form, rev));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_seq_rec2_min
NumericVector rcpp_seq_rec2_min(NumericVector inits, int n, NumericVector s, NumericVector m, int form, bool rev);
RcppExport SEXP _squarebrackets_rcpp_seq_rec2_min(SEXP initsSEXP, SEXP nSEXP, SEXP sSEXP, SEXP mSEXP, SEXP formSEXP, SEXP revSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type inits(initsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s(sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type form(formSEXP);
    Rcpp::traits::input_parameter< bool >::type rev(revSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_seq_rec2_min(inits, n, s, m, form, rev));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_seq_rec2_x
NumericVector rcpp_seq_rec2_x(NumericVector inits, int n, NumericVector s, NumericVector m, int form, bool rev);
RcppExport SEXP _squarebrackets_rcpp_seq_rec2_x(SEXP initsSEXP, SEXP nSEXP, SEXP sSEXP, SEXP mSEXP, SEXP formSEXP, SEXP revSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type inits(initsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s(sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type form(formSEXP);
    Rcpp::traits::input_parameter< bool >::type rev(revSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_seq_rec2_x(inits, n, s, m, form, rev));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_seq_rec2_div
NumericVector rcpp_seq_rec2_div(NumericVector inits, int n, NumericVector s, NumericVector m, int form, bool rev);
RcppExport SEXP _squarebrackets_rcpp_seq_rec2_div(SEXP initsSEXP, SEXP nSEXP, SEXP sSEXP, SEXP mSEXP, SEXP formSEXP, SEXP revSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type inits(initsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s(sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type form(formSEXP);
    Rcpp::traits::input_parameter< bool >::type rev(revSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_seq_rec2_div(inits, n, s, m, form, rev));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_set_all_Logical
void rcpp_set_all_Logical(LogicalVector x, LogicalVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_all_Logical(SEXP xSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type rp(rpSEXP);
    rcpp_set_all_Logical(x, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_all_Integer
void rcpp_set_all_Integer(IntegerVector x, IntegerVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_all_Integer(SEXP xSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp(rpSEXP);
    rcpp_set_all_Integer(x, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_all_Numeric
void rcpp_set_all_Numeric(NumericVector x, NumericVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_all_Numeric(SEXP xSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    rcpp_set_all_Numeric(x, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_all_Character
void rcpp_set_all_Character(CharacterVector x, CharacterVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_all_Character(SEXP xSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rp(rpSEXP);
    rcpp_set_all_Character(x, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_all_Complex
void rcpp_set_all_Complex(ComplexVector x, ComplexVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_all_Complex(SEXP xSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type rp(rpSEXP);
    rcpp_set_all_Complex(x, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_all_Raw
void rcpp_set_all_Raw(RawVector x, RawVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_all_Raw(SEXP xSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< RawVector >::type rp(rpSEXP);
    rcpp_set_all_Raw(x, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_2d_Logical
void rcpp_set_array_2d_Logical(LogicalVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector dimcumprod, LogicalVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_2d_Logical(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type rp(rpSEXP);
    rcpp_set_array_2d_Logical(x, ind1, ind2, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_3d_Logical
void rcpp_set_array_3d_Logical(LogicalVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector dimcumprod, LogicalVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_3d_Logical(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type rp(rpSEXP);
    rcpp_set_array_3d_Logical(x, ind1, ind2, ind3, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_4d_Logical
void rcpp_set_array_4d_Logical(LogicalVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector dimcumprod, LogicalVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_4d_Logical(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type rp(rpSEXP);
    rcpp_set_array_4d_Logical(x, ind1, ind2, ind3, ind4, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_5d_Logical
void rcpp_set_array_5d_Logical(LogicalVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector ind5, IntegerVector dimcumprod, LogicalVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_5d_Logical(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP ind5SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind5(ind5SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type rp(rpSEXP);
    rcpp_set_array_5d_Logical(x, ind1, ind2, ind3, ind4, ind5, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_6d_Logical
void rcpp_set_array_6d_Logical(LogicalVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector ind5, IntegerVector ind6, IntegerVector dimcumprod, LogicalVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_6d_Logical(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP ind5SEXP, SEXP ind6SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind5(ind5SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind6(ind6SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type rp(rpSEXP);
    rcpp_set_array_6d_Logical(x, ind1, ind2, ind3, ind4, ind5, ind6, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_2d_Integer
void rcpp_set_array_2d_Integer(IntegerVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector dimcumprod, IntegerVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_2d_Integer(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp(rpSEXP);
    rcpp_set_array_2d_Integer(x, ind1, ind2, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_3d_Integer
void rcpp_set_array_3d_Integer(IntegerVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector dimcumprod, IntegerVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_3d_Integer(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp(rpSEXP);
    rcpp_set_array_3d_Integer(x, ind1, ind2, ind3, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_4d_Integer
void rcpp_set_array_4d_Integer(IntegerVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector dimcumprod, IntegerVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_4d_Integer(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp(rpSEXP);
    rcpp_set_array_4d_Integer(x, ind1, ind2, ind3, ind4, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_5d_Integer
void rcpp_set_array_5d_Integer(IntegerVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector ind5, IntegerVector dimcumprod, IntegerVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_5d_Integer(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP ind5SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind5(ind5SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp(rpSEXP);
    rcpp_set_array_5d_Integer(x, ind1, ind2, ind3, ind4, ind5, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_6d_Integer
void rcpp_set_array_6d_Integer(IntegerVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector ind5, IntegerVector ind6, IntegerVector dimcumprod, IntegerVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_6d_Integer(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP ind5SEXP, SEXP ind6SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind5(ind5SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind6(ind6SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp(rpSEXP);
    rcpp_set_array_6d_Integer(x, ind1, ind2, ind3, ind4, ind5, ind6, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_2d_Numeric
void rcpp_set_array_2d_Numeric(NumericVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector dimcumprod, NumericVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_2d_Numeric(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    rcpp_set_array_2d_Numeric(x, ind1, ind2, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_3d_Numeric
void rcpp_set_array_3d_Numeric(NumericVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector dimcumprod, NumericVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_3d_Numeric(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    rcpp_set_array_3d_Numeric(x, ind1, ind2, ind3, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_4d_Numeric
void rcpp_set_array_4d_Numeric(NumericVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector dimcumprod, NumericVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_4d_Numeric(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    rcpp_set_array_4d_Numeric(x, ind1, ind2, ind3, ind4, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_5d_Numeric
void rcpp_set_array_5d_Numeric(NumericVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector ind5, IntegerVector dimcumprod, NumericVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_5d_Numeric(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP ind5SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind5(ind5SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    rcpp_set_array_5d_Numeric(x, ind1, ind2, ind3, ind4, ind5, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_6d_Numeric
void rcpp_set_array_6d_Numeric(NumericVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector ind5, IntegerVector ind6, IntegerVector dimcumprod, NumericVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_6d_Numeric(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP ind5SEXP, SEXP ind6SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind5(ind5SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind6(ind6SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    rcpp_set_array_6d_Numeric(x, ind1, ind2, ind3, ind4, ind5, ind6, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_2d_Character
void rcpp_set_array_2d_Character(CharacterVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector dimcumprod, CharacterVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_2d_Character(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rp(rpSEXP);
    rcpp_set_array_2d_Character(x, ind1, ind2, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_3d_Character
void rcpp_set_array_3d_Character(CharacterVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector dimcumprod, CharacterVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_3d_Character(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rp(rpSEXP);
    rcpp_set_array_3d_Character(x, ind1, ind2, ind3, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_4d_Character
void rcpp_set_array_4d_Character(CharacterVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector dimcumprod, CharacterVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_4d_Character(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rp(rpSEXP);
    rcpp_set_array_4d_Character(x, ind1, ind2, ind3, ind4, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_5d_Character
void rcpp_set_array_5d_Character(CharacterVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector ind5, IntegerVector dimcumprod, CharacterVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_5d_Character(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP ind5SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind5(ind5SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rp(rpSEXP);
    rcpp_set_array_5d_Character(x, ind1, ind2, ind3, ind4, ind5, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_6d_Character
void rcpp_set_array_6d_Character(CharacterVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector ind5, IntegerVector ind6, IntegerVector dimcumprod, CharacterVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_6d_Character(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP ind5SEXP, SEXP ind6SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind5(ind5SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind6(ind6SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rp(rpSEXP);
    rcpp_set_array_6d_Character(x, ind1, ind2, ind3, ind4, ind5, ind6, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_2d_Complex
void rcpp_set_array_2d_Complex(ComplexVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector dimcumprod, ComplexVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_2d_Complex(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type rp(rpSEXP);
    rcpp_set_array_2d_Complex(x, ind1, ind2, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_3d_Complex
void rcpp_set_array_3d_Complex(ComplexVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector dimcumprod, ComplexVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_3d_Complex(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type rp(rpSEXP);
    rcpp_set_array_3d_Complex(x, ind1, ind2, ind3, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_4d_Complex
void rcpp_set_array_4d_Complex(ComplexVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector dimcumprod, ComplexVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_4d_Complex(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type rp(rpSEXP);
    rcpp_set_array_4d_Complex(x, ind1, ind2, ind3, ind4, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_5d_Complex
void rcpp_set_array_5d_Complex(ComplexVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector ind5, IntegerVector dimcumprod, ComplexVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_5d_Complex(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP ind5SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind5(ind5SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type rp(rpSEXP);
    rcpp_set_array_5d_Complex(x, ind1, ind2, ind3, ind4, ind5, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_6d_Complex
void rcpp_set_array_6d_Complex(ComplexVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector ind5, IntegerVector ind6, IntegerVector dimcumprod, ComplexVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_6d_Complex(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP ind5SEXP, SEXP ind6SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind5(ind5SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind6(ind6SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type rp(rpSEXP);
    rcpp_set_array_6d_Complex(x, ind1, ind2, ind3, ind4, ind5, ind6, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_2d_Raw
void rcpp_set_array_2d_Raw(RawVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector dimcumprod, RawVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_2d_Raw(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< RawVector >::type rp(rpSEXP);
    rcpp_set_array_2d_Raw(x, ind1, ind2, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_3d_Raw
void rcpp_set_array_3d_Raw(RawVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector dimcumprod, RawVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_3d_Raw(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< RawVector >::type rp(rpSEXP);
    rcpp_set_array_3d_Raw(x, ind1, ind2, ind3, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_4d_Raw
void rcpp_set_array_4d_Raw(RawVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector dimcumprod, RawVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_4d_Raw(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< RawVector >::type rp(rpSEXP);
    rcpp_set_array_4d_Raw(x, ind1, ind2, ind3, ind4, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_5d_Raw
void rcpp_set_array_5d_Raw(RawVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector ind5, IntegerVector dimcumprod, RawVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_5d_Raw(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP ind5SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind5(ind5SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< RawVector >::type rp(rpSEXP);
    rcpp_set_array_5d_Raw(x, ind1, ind2, ind3, ind4, ind5, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_6d_Raw
void rcpp_set_array_6d_Raw(RawVector x, IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector ind5, IntegerVector ind6, IntegerVector dimcumprod, RawVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_6d_Raw(SEXP xSEXP, SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP ind5SEXP, SEXP ind6SEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind5(ind5SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind6(ind6SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< RawVector >::type rp(rpSEXP);
    rcpp_set_array_6d_Raw(x, ind1, ind2, ind3, ind4, ind5, ind6, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_2d_6d_Logical
void rcpp_set_array_2d_6d_Logical(LogicalVector x, List out, IntegerVector dimcumprod, LogicalVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_2d_6d_Logical(SEXP xSEXP, SEXP outSEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type out(outSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type rp(rpSEXP);
    rcpp_set_array_2d_6d_Logical(x, out, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_2d_6d_Integer
void rcpp_set_array_2d_6d_Integer(IntegerVector x, List out, IntegerVector dimcumprod, IntegerVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_2d_6d_Integer(SEXP xSEXP, SEXP outSEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type out(outSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp(rpSEXP);
    rcpp_set_array_2d_6d_Integer(x, out, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_2d_6d_Numeric
void rcpp_set_array_2d_6d_Numeric(NumericVector x, List out, IntegerVector dimcumprod, NumericVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_2d_6d_Numeric(SEXP xSEXP, SEXP outSEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type out(outSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    rcpp_set_array_2d_6d_Numeric(x, out, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_2d_6d_Character
void rcpp_set_array_2d_6d_Character(CharacterVector x, List out, IntegerVector dimcumprod, CharacterVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_2d_6d_Character(SEXP xSEXP, SEXP outSEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type out(outSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rp(rpSEXP);
    rcpp_set_array_2d_6d_Character(x, out, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_2d_6d_Complex
void rcpp_set_array_2d_6d_Complex(ComplexVector x, List out, IntegerVector dimcumprod, ComplexVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_2d_6d_Complex(SEXP xSEXP, SEXP outSEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type out(outSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type rp(rpSEXP);
    rcpp_set_array_2d_6d_Complex(x, out, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_array_2d_6d_Raw
void rcpp_set_array_2d_6d_Raw(RawVector x, List out, IntegerVector dimcumprod, RawVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_array_2d_6d_Raw(SEXP xSEXP, SEXP outSEXP, SEXP dimcumprodSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type out(outSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    Rcpp::traits::input_parameter< RawVector >::type rp(rpSEXP);
    rcpp_set_array_2d_6d_Raw(x, out, dimcumprod, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_rowcol_Logical
void rcpp_set_matrix_rowcol_Logical(LogicalMatrix x, IntegerVector rowind, IntegerVector colind, LogicalVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_rowcol_Logical(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type rp(rpSEXP);
    rcpp_set_matrix_rowcol_Logical(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_row_Logical
void rcpp_set_matrix_row_Logical(LogicalMatrix x, IntegerVector rowind, LogicalVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_row_Logical(SEXP xSEXP, SEXP rowindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type rp(rpSEXP);
    rcpp_set_matrix_row_Logical(x, rowind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_col_Logical
void rcpp_set_matrix_col_Logical(LogicalMatrix x, IntegerVector colind, LogicalVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_col_Logical(SEXP xSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type rp(rpSEXP);
    rcpp_set_matrix_col_Logical(x, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_Logical
void rcpp_set_matrix_Logical(LogicalMatrix x, IntegerVector rowind, IntegerVector colind, LogicalVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_Logical(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type rp(rpSEXP);
    rcpp_set_matrix_Logical(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_rowcol_Integer
void rcpp_set_matrix_rowcol_Integer(IntegerMatrix x, IntegerVector rowind, IntegerVector colind, IntegerVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_rowcol_Integer(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp(rpSEXP);
    rcpp_set_matrix_rowcol_Integer(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_row_Integer
void rcpp_set_matrix_row_Integer(IntegerMatrix x, IntegerVector rowind, IntegerVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_row_Integer(SEXP xSEXP, SEXP rowindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp(rpSEXP);
    rcpp_set_matrix_row_Integer(x, rowind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_col_Integer
void rcpp_set_matrix_col_Integer(IntegerMatrix x, IntegerVector colind, IntegerVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_col_Integer(SEXP xSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp(rpSEXP);
    rcpp_set_matrix_col_Integer(x, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_Integer
void rcpp_set_matrix_Integer(IntegerMatrix x, IntegerVector rowind, IntegerVector colind, IntegerVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_Integer(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp(rpSEXP);
    rcpp_set_matrix_Integer(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_rowcol_Numeric
void rcpp_set_matrix_rowcol_Numeric(NumericMatrix x, IntegerVector rowind, IntegerVector colind, NumericVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_rowcol_Numeric(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    rcpp_set_matrix_rowcol_Numeric(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_row_Numeric
void rcpp_set_matrix_row_Numeric(NumericMatrix x, IntegerVector rowind, NumericVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_row_Numeric(SEXP xSEXP, SEXP rowindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    rcpp_set_matrix_row_Numeric(x, rowind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_col_Numeric
void rcpp_set_matrix_col_Numeric(NumericMatrix x, IntegerVector colind, NumericVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_col_Numeric(SEXP xSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    rcpp_set_matrix_col_Numeric(x, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_Numeric
void rcpp_set_matrix_Numeric(NumericMatrix x, IntegerVector rowind, IntegerVector colind, NumericVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_Numeric(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    rcpp_set_matrix_Numeric(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_rowcol_Character
void rcpp_set_matrix_rowcol_Character(CharacterMatrix x, IntegerVector rowind, IntegerVector colind, CharacterVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_rowcol_Character(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rp(rpSEXP);
    rcpp_set_matrix_rowcol_Character(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_row_Character
void rcpp_set_matrix_row_Character(CharacterMatrix x, IntegerVector rowind, CharacterVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_row_Character(SEXP xSEXP, SEXP rowindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rp(rpSEXP);
    rcpp_set_matrix_row_Character(x, rowind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_col_Character
void rcpp_set_matrix_col_Character(CharacterMatrix x, IntegerVector colind, CharacterVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_col_Character(SEXP xSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rp(rpSEXP);
    rcpp_set_matrix_col_Character(x, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_Character
void rcpp_set_matrix_Character(CharacterMatrix x, IntegerVector rowind, IntegerVector colind, CharacterVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_Character(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rp(rpSEXP);
    rcpp_set_matrix_Character(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_rowcol_Complex
void rcpp_set_matrix_rowcol_Complex(ComplexMatrix x, IntegerVector rowind, IntegerVector colind, ComplexVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_rowcol_Complex(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type rp(rpSEXP);
    rcpp_set_matrix_rowcol_Complex(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_row_Complex
void rcpp_set_matrix_row_Complex(ComplexMatrix x, IntegerVector rowind, ComplexVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_row_Complex(SEXP xSEXP, SEXP rowindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type rp(rpSEXP);
    rcpp_set_matrix_row_Complex(x, rowind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_col_Complex
void rcpp_set_matrix_col_Complex(ComplexMatrix x, IntegerVector colind, ComplexVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_col_Complex(SEXP xSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type rp(rpSEXP);
    rcpp_set_matrix_col_Complex(x, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_Complex
void rcpp_set_matrix_Complex(ComplexMatrix x, IntegerVector rowind, IntegerVector colind, ComplexVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_Complex(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type rp(rpSEXP);
    rcpp_set_matrix_Complex(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_rowcol_Raw
void rcpp_set_matrix_rowcol_Raw(RawMatrix x, IntegerVector rowind, IntegerVector colind, RawVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_rowcol_Raw(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< RawVector >::type rp(rpSEXP);
    rcpp_set_matrix_rowcol_Raw(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_row_Raw
void rcpp_set_matrix_row_Raw(RawMatrix x, IntegerVector rowind, RawVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_row_Raw(SEXP xSEXP, SEXP rowindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< RawVector >::type rp(rpSEXP);
    rcpp_set_matrix_row_Raw(x, rowind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_col_Raw
void rcpp_set_matrix_col_Raw(RawMatrix x, IntegerVector colind, RawVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_col_Raw(SEXP xSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< RawVector >::type rp(rpSEXP);
    rcpp_set_matrix_col_Raw(x, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_matrix_Raw
void rcpp_set_matrix_Raw(RawMatrix x, IntegerVector rowind, IntegerVector colind, RawVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_matrix_Raw(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< RawVector >::type rp(rpSEXP);
    rcpp_set_matrix_Raw(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_col_Logical
void rcpp_setapply_col_Logical(LogicalMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_col_Logical(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_col_Logical(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_row_Logical
void rcpp_setapply_row_Logical(LogicalMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_row_Logical(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_row_Logical(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_col_Integer
void rcpp_setapply_col_Integer(IntegerMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_col_Integer(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_col_Integer(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_row_Integer
void rcpp_setapply_row_Integer(IntegerMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_row_Integer(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_row_Integer(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_col_Numeric
void rcpp_setapply_col_Numeric(NumericMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_col_Numeric(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_col_Numeric(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_row_Numeric
void rcpp_setapply_row_Numeric(NumericMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_row_Numeric(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_row_Numeric(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_col_Character
void rcpp_setapply_col_Character(CharacterMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_col_Character(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_col_Character(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_row_Character
void rcpp_setapply_row_Character(CharacterMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_row_Character(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_row_Character(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_col_Complex
void rcpp_setapply_col_Complex(ComplexMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_col_Complex(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_col_Complex(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_row_Complex
void rcpp_setapply_row_Complex(ComplexMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_row_Complex(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_row_Complex(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_col_Raw
void rcpp_setapply_col_Raw(RawMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_col_Raw(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_col_Raw(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_row_Raw
void rcpp_setapply_row_Raw(RawMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_row_Raw(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_row_Raw(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setrv_safe_Complex
void rcpp_setrv_safe_Complex(ComplexVector x, ComplexVector v, ComplexVector rp, bool invert);
RcppExport SEXP _squarebrackets_rcpp_setrv_safe_Complex(SEXP xSEXP, SEXP vSEXP, SEXP rpSEXP, SEXP invertSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< bool >::type invert(invertSEXP);
    rcpp_setrv_safe_Complex(x, v, rp, invert);
    return R_NilValue;
END_RCPP
}
// rcpp_setrv_fast_Complex
void rcpp_setrv_fast_Complex(ComplexVector x, ComplexVector v, ComplexVector rp, bool invert);
RcppExport SEXP _squarebrackets_rcpp_setrv_fast_Complex(SEXP xSEXP, SEXP vSEXP, SEXP rpSEXP, SEXP invertSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< bool >::type invert(invertSEXP);
    rcpp_setrv_fast_Complex(x, v, rp, invert);
    return R_NilValue;
END_RCPP
}
// rcpp_setrv_safe_Logical
void rcpp_setrv_safe_Logical(LogicalVector x, LogicalVector v, LogicalVector rp, bool invert);
RcppExport SEXP _squarebrackets_rcpp_setrv_safe_Logical(SEXP xSEXP, SEXP vSEXP, SEXP rpSEXP, SEXP invertSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< bool >::type invert(invertSEXP);
    rcpp_setrv_safe_Logical(x, v, rp, invert);
    return R_NilValue;
END_RCPP
}
// rcpp_setrv_fast_Logical
void rcpp_setrv_fast_Logical(LogicalVector x, LogicalVector v, LogicalVector rp, bool invert);
RcppExport SEXP _squarebrackets_rcpp_setrv_fast_Logical(SEXP xSEXP, SEXP vSEXP, SEXP rpSEXP, SEXP invertSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< bool >::type invert(invertSEXP);
    rcpp_setrv_fast_Logical(x, v, rp, invert);
    return R_NilValue;
END_RCPP
}
// rcpp_setrv_safe_Integer
void rcpp_setrv_safe_Integer(IntegerVector x, IntegerVector v, IntegerVector rp, bool invert);
RcppExport SEXP _squarebrackets_rcpp_setrv_safe_Integer(SEXP xSEXP, SEXP vSEXP, SEXP rpSEXP, SEXP invertSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< bool >::type invert(invertSEXP);
    rcpp_setrv_safe_Integer(x, v, rp, invert);
    return R_NilValue;
END_RCPP
}
// rcpp_setrv_fast_Integer
void rcpp_setrv_fast_Integer(IntegerVector x, IntegerVector v, IntegerVector rp, bool invert);
RcppExport SEXP _squarebrackets_rcpp_setrv_fast_Integer(SEXP xSEXP, SEXP vSEXP, SEXP rpSEXP, SEXP invertSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< bool >::type invert(invertSEXP);
    rcpp_setrv_fast_Integer(x, v, rp, invert);
    return R_NilValue;
END_RCPP
}
// rcpp_setrv_safe_Numeric
void rcpp_setrv_safe_Numeric(NumericVector x, NumericVector v, NumericVector rp, bool invert);
RcppExport SEXP _squarebrackets_rcpp_setrv_safe_Numeric(SEXP xSEXP, SEXP vSEXP, SEXP rpSEXP, SEXP invertSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< bool >::type invert(invertSEXP);
    rcpp_setrv_safe_Numeric(x, v, rp, invert);
    return R_NilValue;
END_RCPP
}
// rcpp_setrv_fast_Numeric
void rcpp_setrv_fast_Numeric(NumericVector x, NumericVector v, NumericVector rp, bool invert);
RcppExport SEXP _squarebrackets_rcpp_setrv_fast_Numeric(SEXP xSEXP, SEXP vSEXP, SEXP rpSEXP, SEXP invertSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< bool >::type invert(invertSEXP);
    rcpp_setrv_fast_Numeric(x, v, rp, invert);
    return R_NilValue;
END_RCPP
}
// rcpp_setrv_safe_Character
void rcpp_setrv_safe_Character(CharacterVector x, CharacterVector v, CharacterVector rp, bool invert);
RcppExport SEXP _squarebrackets_rcpp_setrv_safe_Character(SEXP xSEXP, SEXP vSEXP, SEXP rpSEXP, SEXP invertSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< bool >::type invert(invertSEXP);
    rcpp_setrv_safe_Character(x, v, rp, invert);
    return R_NilValue;
END_RCPP
}
// rcpp_setrv_fast_Character
void rcpp_setrv_fast_Character(CharacterVector x, CharacterVector v, CharacterVector rp, bool invert);
RcppExport SEXP _squarebrackets_rcpp_setrv_fast_Character(SEXP xSEXP, SEXP vSEXP, SEXP rpSEXP, SEXP invertSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< bool >::type invert(invertSEXP);
    rcpp_setrv_fast_Character(x, v, rp, invert);
    return R_NilValue;
END_RCPP
}
// rcpp_setrv_safe_Raw
void rcpp_setrv_safe_Raw(RawVector x, RawVector v, RawVector rp, bool invert);
RcppExport SEXP _squarebrackets_rcpp_setrv_safe_Raw(SEXP xSEXP, SEXP vSEXP, SEXP rpSEXP, SEXP invertSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< RawVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< RawVector >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< bool >::type invert(invertSEXP);
    rcpp_setrv_safe_Raw(x, v, rp, invert);
    return R_NilValue;
END_RCPP
}
// rcpp_setrv_fast_Raw
void rcpp_setrv_fast_Raw(RawVector x, RawVector v, RawVector rp, bool invert);
RcppExport SEXP _squarebrackets_rcpp_setrv_fast_Raw(SEXP xSEXP, SEXP vSEXP, SEXP rpSEXP, SEXP invertSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< RawVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< RawVector >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< bool >::type invert(invertSEXP);
    rcpp_setrv_fast_Raw(x, v, rp, invert);
    return R_NilValue;
END_RCPP
}
// rcpp_sub2ind_2d
IntegerVector rcpp_sub2ind_2d(IntegerVector ind1, IntegerVector ind2, IntegerVector dimcumprod);
RcppExport SEXP _squarebrackets_rcpp_sub2ind_2d(SEXP ind1SEXP, SEXP ind2SEXP, SEXP dimcumprodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sub2ind_2d(ind1, ind2, dimcumprod));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sub2ind_3d
IntegerVector rcpp_sub2ind_3d(IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector dimcumprod);
RcppExport SEXP _squarebrackets_rcpp_sub2ind_3d(SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP dimcumprodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sub2ind_3d(ind1, ind2, ind3, dimcumprod));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sub2ind_4d
IntegerVector rcpp_sub2ind_4d(IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector dimcumprod);
RcppExport SEXP _squarebrackets_rcpp_sub2ind_4d(SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP dimcumprodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sub2ind_4d(ind1, ind2, ind3, ind4, dimcumprod));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sub2ind_5d
IntegerVector rcpp_sub2ind_5d(IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector ind5, IntegerVector dimcumprod);
RcppExport SEXP _squarebrackets_rcpp_sub2ind_5d(SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP ind5SEXP, SEXP dimcumprodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind5(ind5SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sub2ind_5d(ind1, ind2, ind3, ind4, ind5, dimcumprod));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sub2ind_6d
IntegerVector rcpp_sub2ind_6d(IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector ind5, IntegerVector ind6, IntegerVector dimcumprod);
RcppExport SEXP _squarebrackets_rcpp_sub2ind_6d(SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP ind5SEXP, SEXP ind6SEXP, SEXP dimcumprodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind5(ind5SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind6(ind6SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sub2ind_6d(ind1, ind2, ind3, ind4, ind5, ind6, dimcumprod));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_abind_all_conform_dims
bool rcpp_abind_all_conform_dims(IntegerVector conform_dim, IntegerMatrix arg_dim, int n, int along);
RcppExport SEXP _squarebrackets_rcpp_abind_all_conform_dims(SEXP conform_dimSEXP, SEXP arg_dimSEXP, SEXP nSEXP, SEXP alongSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type conform_dim(conform_dimSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type arg_dim(arg_dimSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type along(alongSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_abind_all_conform_dims(conform_dim, arg_dim, n, along));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_abind_get_maxdims
IntegerVector rcpp_abind_get_maxdims(IntegerMatrix arg_dim);
RcppExport SEXP _squarebrackets_rcpp_abind_get_maxdims(SEXP arg_dimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type arg_dim(arg_dimSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_abind_get_maxdims(arg_dim));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_abind_check_conform_dims
LogicalVector rcpp_abind_check_conform_dims(IntegerVector conform_dim, IntegerMatrix arg_dim, int n, int along);
RcppExport SEXP _squarebrackets_rcpp_abind_check_conform_dims(SEXP conform_dimSEXP, SEXP arg_dimSEXP, SEXP nSEXP, SEXP alongSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type conform_dim(conform_dimSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type arg_dim(arg_dimSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type along(alongSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_abind_check_conform_dims(conform_dim, arg_dim, n, along));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_abind_get_dimnames
List rcpp_abind_get_dimnames(List x, int along);
RcppExport SEXP _squarebrackets_rcpp_abind_get_dimnames(SEXP xSEXP, SEXP alongSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type along(alongSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_abind_get_dimnames(x, along));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_address
String rcpp_address(SEXP x);
RcppExport SEXP _squarebrackets_rcpp_address(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_address(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_list_bindings
CharacterVector rcpp_list_bindings(String ref_address, Environment env, CharacterVector ls);
RcppExport SEXP _squarebrackets_rcpp_list_bindings(SEXP ref_addressSEXP, SEXP envSEXP, SEXP lsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type ref_address(ref_addressSEXP);
    Rcpp::traits::input_parameter< Environment >::type env(envSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type ls(lsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_list_bindings(ref_address, env, ls));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_all_addresses
CharacterVector rcpp_all_addresses(Environment env, CharacterVector ls);
RcppExport SEXP _squarebrackets_rcpp_all_addresses(SEXP envSEXP, SEXP lsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type env(envSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type ls(lsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_all_addresses(env, ls));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_address_in_env
bool rcpp_address_in_env(String ref_address, Environment env, CharacterVector ls);
RcppExport SEXP _squarebrackets_rcpp_address_in_env(SEXP ref_addressSEXP, SEXP envSEXP, SEXP lsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type ref_address(ref_addressSEXP);
    Rcpp::traits::input_parameter< Environment >::type env(envSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type ls(lsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_address_in_env(ref_address, env, ls));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_anybad
bool rcpp_anybad(IntegerVector indx, int value);
RcppExport SEXP _squarebrackets_rcpp_anybad(SEXP indxSEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type indx(indxSEXP);
    Rcpp::traits::input_parameter< int >::type value(valueSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_anybad(indx, value));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_prod_int
int rcpp_prod_int(IntegerVector x);
RcppExport SEXP _squarebrackets_rcpp_prod_int(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_prod_int(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_pre_coord2ind
void rcpp_pre_coord2ind(IntegerVector ind, IntegerVector coord, int myprod);
RcppExport SEXP _squarebrackets_rcpp_pre_coord2ind(SEXP indSEXP, SEXP coordSEXP, SEXP myprodSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type ind(indSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type coord(coordSEXP);
    Rcpp::traits::input_parameter< int >::type myprod(myprodSEXP);
    rcpp_pre_coord2ind(ind, coord, myprod);
    return R_NilValue;
END_RCPP
}
// rcpp_coord2ind
IntegerVector rcpp_coord2ind(IntegerVector ind, IntegerMatrix coord, IntegerVector xdim);
RcppExport SEXP _squarebrackets_rcpp_coord2ind(SEXP indSEXP, SEXP coordSEXP, SEXP xdimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type ind(indSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type coord(coordSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type xdim(xdimSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_coord2ind(ind, coord, xdim));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sb_str
String rcpp_sb_str(std::string x, IntegerVector ind);
RcppExport SEXP _squarebrackets_rcpp_sb_str(SEXP xSEXP, SEXP indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind(indSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sb_str(x, ind));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sb_str_rp
String rcpp_sb_str_rp(std::string x, IntegerVector ind, std::string rp_x, IntegerVector rp_ind);
RcppExport SEXP _squarebrackets_rcpp_sb_str_rp(SEXP xSEXP, SEXP indSEXP, SEXP rp_xSEXP, SEXP rp_indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind(indSEXP);
    Rcpp::traits::input_parameter< std::string >::type rp_x(rp_xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp_ind(rp_indSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sb_str_rp(x, ind, rp_x, rp_ind));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_seq_mlen
List rcpp_seq_mlen(IntegerVector x);
RcppExport SEXP _squarebrackets_rcpp_seq_mlen(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_seq_mlen(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_recycle_seq_mlen
List rcpp_recycle_seq_mlen(IntegerVector x, IntegerVector y);
RcppExport SEXP _squarebrackets_rcpp_recycle_seq_mlen(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_recycle_seq_mlen(x, y));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_set_namepointer
void rcpp_set_namepointer(CharacterVector nms, IntegerVector ind, CharacterVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_namepointer(SEXP nmsSEXP, SEXP indSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type nms(nmsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind(indSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rp(rpSEXP);
    rcpp_set_namepointer(nms, ind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_setvind_Complex
void rcpp_setvind_Complex(ComplexVector x, IntegerVector ind, ComplexVector rp);
RcppExport SEXP _squarebrackets_rcpp_setvind_Complex(SEXP xSEXP, SEXP indSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind(indSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type rp(rpSEXP);
    rcpp_setvind_Complex(x, ind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_sub2ind_general
IntegerVector rcpp_sub2ind_general(List lst, int total, IntegerVector reps_each, IntegerVector reps_whole, IntegerVector xdim, IntegerVector dimcumprod);
RcppExport SEXP _squarebrackets_rcpp_sub2ind_general(SEXP lstSEXP, SEXP totalSEXP, SEXP reps_eachSEXP, SEXP reps_wholeSEXP, SEXP xdimSEXP, SEXP dimcumprodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type lst(lstSEXP);
    Rcpp::traits::input_parameter< int >::type total(totalSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type reps_each(reps_eachSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type reps_whole(reps_wholeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type xdim(xdimSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sub2ind_general(lst, total, reps_each, reps_whole, xdim, dimcumprod));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP C_any_badindx(SEXP, SEXP);
RcppExport SEXP C_any_nonpos(SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_squarebrackets_rcpp_seq_rec2_plus", (DL_FUNC) &_squarebrackets_rcpp_seq_rec2_plus, 6},
    {"_squarebrackets_rcpp_seq_rec2_min", (DL_FUNC) &_squarebrackets_rcpp_seq_rec2_min, 6},
    {"_squarebrackets_rcpp_seq_rec2_x", (DL_FUNC) &_squarebrackets_rcpp_seq_rec2_x, 6},
    {"_squarebrackets_rcpp_seq_rec2_div", (DL_FUNC) &_squarebrackets_rcpp_seq_rec2_div, 6},
    {"_squarebrackets_rcpp_set_all_Logical", (DL_FUNC) &_squarebrackets_rcpp_set_all_Logical, 2},
    {"_squarebrackets_rcpp_set_all_Integer", (DL_FUNC) &_squarebrackets_rcpp_set_all_Integer, 2},
    {"_squarebrackets_rcpp_set_all_Numeric", (DL_FUNC) &_squarebrackets_rcpp_set_all_Numeric, 2},
    {"_squarebrackets_rcpp_set_all_Character", (DL_FUNC) &_squarebrackets_rcpp_set_all_Character, 2},
    {"_squarebrackets_rcpp_set_all_Complex", (DL_FUNC) &_squarebrackets_rcpp_set_all_Complex, 2},
    {"_squarebrackets_rcpp_set_all_Raw", (DL_FUNC) &_squarebrackets_rcpp_set_all_Raw, 2},
    {"_squarebrackets_rcpp_set_array_2d_Logical", (DL_FUNC) &_squarebrackets_rcpp_set_array_2d_Logical, 5},
    {"_squarebrackets_rcpp_set_array_3d_Logical", (DL_FUNC) &_squarebrackets_rcpp_set_array_3d_Logical, 6},
    {"_squarebrackets_rcpp_set_array_4d_Logical", (DL_FUNC) &_squarebrackets_rcpp_set_array_4d_Logical, 7},
    {"_squarebrackets_rcpp_set_array_5d_Logical", (DL_FUNC) &_squarebrackets_rcpp_set_array_5d_Logical, 8},
    {"_squarebrackets_rcpp_set_array_6d_Logical", (DL_FUNC) &_squarebrackets_rcpp_set_array_6d_Logical, 9},
    {"_squarebrackets_rcpp_set_array_2d_Integer", (DL_FUNC) &_squarebrackets_rcpp_set_array_2d_Integer, 5},
    {"_squarebrackets_rcpp_set_array_3d_Integer", (DL_FUNC) &_squarebrackets_rcpp_set_array_3d_Integer, 6},
    {"_squarebrackets_rcpp_set_array_4d_Integer", (DL_FUNC) &_squarebrackets_rcpp_set_array_4d_Integer, 7},
    {"_squarebrackets_rcpp_set_array_5d_Integer", (DL_FUNC) &_squarebrackets_rcpp_set_array_5d_Integer, 8},
    {"_squarebrackets_rcpp_set_array_6d_Integer", (DL_FUNC) &_squarebrackets_rcpp_set_array_6d_Integer, 9},
    {"_squarebrackets_rcpp_set_array_2d_Numeric", (DL_FUNC) &_squarebrackets_rcpp_set_array_2d_Numeric, 5},
    {"_squarebrackets_rcpp_set_array_3d_Numeric", (DL_FUNC) &_squarebrackets_rcpp_set_array_3d_Numeric, 6},
    {"_squarebrackets_rcpp_set_array_4d_Numeric", (DL_FUNC) &_squarebrackets_rcpp_set_array_4d_Numeric, 7},
    {"_squarebrackets_rcpp_set_array_5d_Numeric", (DL_FUNC) &_squarebrackets_rcpp_set_array_5d_Numeric, 8},
    {"_squarebrackets_rcpp_set_array_6d_Numeric", (DL_FUNC) &_squarebrackets_rcpp_set_array_6d_Numeric, 9},
    {"_squarebrackets_rcpp_set_array_2d_Character", (DL_FUNC) &_squarebrackets_rcpp_set_array_2d_Character, 5},
    {"_squarebrackets_rcpp_set_array_3d_Character", (DL_FUNC) &_squarebrackets_rcpp_set_array_3d_Character, 6},
    {"_squarebrackets_rcpp_set_array_4d_Character", (DL_FUNC) &_squarebrackets_rcpp_set_array_4d_Character, 7},
    {"_squarebrackets_rcpp_set_array_5d_Character", (DL_FUNC) &_squarebrackets_rcpp_set_array_5d_Character, 8},
    {"_squarebrackets_rcpp_set_array_6d_Character", (DL_FUNC) &_squarebrackets_rcpp_set_array_6d_Character, 9},
    {"_squarebrackets_rcpp_set_array_2d_Complex", (DL_FUNC) &_squarebrackets_rcpp_set_array_2d_Complex, 5},
    {"_squarebrackets_rcpp_set_array_3d_Complex", (DL_FUNC) &_squarebrackets_rcpp_set_array_3d_Complex, 6},
    {"_squarebrackets_rcpp_set_array_4d_Complex", (DL_FUNC) &_squarebrackets_rcpp_set_array_4d_Complex, 7},
    {"_squarebrackets_rcpp_set_array_5d_Complex", (DL_FUNC) &_squarebrackets_rcpp_set_array_5d_Complex, 8},
    {"_squarebrackets_rcpp_set_array_6d_Complex", (DL_FUNC) &_squarebrackets_rcpp_set_array_6d_Complex, 9},
    {"_squarebrackets_rcpp_set_array_2d_Raw", (DL_FUNC) &_squarebrackets_rcpp_set_array_2d_Raw, 5},
    {"_squarebrackets_rcpp_set_array_3d_Raw", (DL_FUNC) &_squarebrackets_rcpp_set_array_3d_Raw, 6},
    {"_squarebrackets_rcpp_set_array_4d_Raw", (DL_FUNC) &_squarebrackets_rcpp_set_array_4d_Raw, 7},
    {"_squarebrackets_rcpp_set_array_5d_Raw", (DL_FUNC) &_squarebrackets_rcpp_set_array_5d_Raw, 8},
    {"_squarebrackets_rcpp_set_array_6d_Raw", (DL_FUNC) &_squarebrackets_rcpp_set_array_6d_Raw, 9},
    {"_squarebrackets_rcpp_set_array_2d_6d_Logical", (DL_FUNC) &_squarebrackets_rcpp_set_array_2d_6d_Logical, 4},
    {"_squarebrackets_rcpp_set_array_2d_6d_Integer", (DL_FUNC) &_squarebrackets_rcpp_set_array_2d_6d_Integer, 4},
    {"_squarebrackets_rcpp_set_array_2d_6d_Numeric", (DL_FUNC) &_squarebrackets_rcpp_set_array_2d_6d_Numeric, 4},
    {"_squarebrackets_rcpp_set_array_2d_6d_Character", (DL_FUNC) &_squarebrackets_rcpp_set_array_2d_6d_Character, 4},
    {"_squarebrackets_rcpp_set_array_2d_6d_Complex", (DL_FUNC) &_squarebrackets_rcpp_set_array_2d_6d_Complex, 4},
    {"_squarebrackets_rcpp_set_array_2d_6d_Raw", (DL_FUNC) &_squarebrackets_rcpp_set_array_2d_6d_Raw, 4},
    {"_squarebrackets_rcpp_set_matrix_rowcol_Logical", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_rowcol_Logical, 4},
    {"_squarebrackets_rcpp_set_matrix_row_Logical", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_row_Logical, 3},
    {"_squarebrackets_rcpp_set_matrix_col_Logical", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_col_Logical, 3},
    {"_squarebrackets_rcpp_set_matrix_Logical", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_Logical, 4},
    {"_squarebrackets_rcpp_set_matrix_rowcol_Integer", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_rowcol_Integer, 4},
    {"_squarebrackets_rcpp_set_matrix_row_Integer", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_row_Integer, 3},
    {"_squarebrackets_rcpp_set_matrix_col_Integer", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_col_Integer, 3},
    {"_squarebrackets_rcpp_set_matrix_Integer", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_Integer, 4},
    {"_squarebrackets_rcpp_set_matrix_rowcol_Numeric", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_rowcol_Numeric, 4},
    {"_squarebrackets_rcpp_set_matrix_row_Numeric", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_row_Numeric, 3},
    {"_squarebrackets_rcpp_set_matrix_col_Numeric", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_col_Numeric, 3},
    {"_squarebrackets_rcpp_set_matrix_Numeric", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_Numeric, 4},
    {"_squarebrackets_rcpp_set_matrix_rowcol_Character", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_rowcol_Character, 4},
    {"_squarebrackets_rcpp_set_matrix_row_Character", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_row_Character, 3},
    {"_squarebrackets_rcpp_set_matrix_col_Character", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_col_Character, 3},
    {"_squarebrackets_rcpp_set_matrix_Character", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_Character, 4},
    {"_squarebrackets_rcpp_set_matrix_rowcol_Complex", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_rowcol_Complex, 4},
    {"_squarebrackets_rcpp_set_matrix_row_Complex", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_row_Complex, 3},
    {"_squarebrackets_rcpp_set_matrix_col_Complex", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_col_Complex, 3},
    {"_squarebrackets_rcpp_set_matrix_Complex", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_Complex, 4},
    {"_squarebrackets_rcpp_set_matrix_rowcol_Raw", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_rowcol_Raw, 4},
    {"_squarebrackets_rcpp_set_matrix_row_Raw", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_row_Raw, 3},
    {"_squarebrackets_rcpp_set_matrix_col_Raw", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_col_Raw, 3},
    {"_squarebrackets_rcpp_set_matrix_Raw", (DL_FUNC) &_squarebrackets_rcpp_set_matrix_Raw, 4},
    {"_squarebrackets_rcpp_setapply_col_Logical", (DL_FUNC) &_squarebrackets_rcpp_setapply_col_Logical, 2},
    {"_squarebrackets_rcpp_setapply_row_Logical", (DL_FUNC) &_squarebrackets_rcpp_setapply_row_Logical, 2},
    {"_squarebrackets_rcpp_setapply_col_Integer", (DL_FUNC) &_squarebrackets_rcpp_setapply_col_Integer, 2},
    {"_squarebrackets_rcpp_setapply_row_Integer", (DL_FUNC) &_squarebrackets_rcpp_setapply_row_Integer, 2},
    {"_squarebrackets_rcpp_setapply_col_Numeric", (DL_FUNC) &_squarebrackets_rcpp_setapply_col_Numeric, 2},
    {"_squarebrackets_rcpp_setapply_row_Numeric", (DL_FUNC) &_squarebrackets_rcpp_setapply_row_Numeric, 2},
    {"_squarebrackets_rcpp_setapply_col_Character", (DL_FUNC) &_squarebrackets_rcpp_setapply_col_Character, 2},
    {"_squarebrackets_rcpp_setapply_row_Character", (DL_FUNC) &_squarebrackets_rcpp_setapply_row_Character, 2},
    {"_squarebrackets_rcpp_setapply_col_Complex", (DL_FUNC) &_squarebrackets_rcpp_setapply_col_Complex, 2},
    {"_squarebrackets_rcpp_setapply_row_Complex", (DL_FUNC) &_squarebrackets_rcpp_setapply_row_Complex, 2},
    {"_squarebrackets_rcpp_setapply_col_Raw", (DL_FUNC) &_squarebrackets_rcpp_setapply_col_Raw, 2},
    {"_squarebrackets_rcpp_setapply_row_Raw", (DL_FUNC) &_squarebrackets_rcpp_setapply_row_Raw, 2},
    {"_squarebrackets_rcpp_setrv_safe_Complex", (DL_FUNC) &_squarebrackets_rcpp_setrv_safe_Complex, 4},
    {"_squarebrackets_rcpp_setrv_fast_Complex", (DL_FUNC) &_squarebrackets_rcpp_setrv_fast_Complex, 4},
    {"_squarebrackets_rcpp_setrv_safe_Logical", (DL_FUNC) &_squarebrackets_rcpp_setrv_safe_Logical, 4},
    {"_squarebrackets_rcpp_setrv_fast_Logical", (DL_FUNC) &_squarebrackets_rcpp_setrv_fast_Logical, 4},
    {"_squarebrackets_rcpp_setrv_safe_Integer", (DL_FUNC) &_squarebrackets_rcpp_setrv_safe_Integer, 4},
    {"_squarebrackets_rcpp_setrv_fast_Integer", (DL_FUNC) &_squarebrackets_rcpp_setrv_fast_Integer, 4},
    {"_squarebrackets_rcpp_setrv_safe_Numeric", (DL_FUNC) &_squarebrackets_rcpp_setrv_safe_Numeric, 4},
    {"_squarebrackets_rcpp_setrv_fast_Numeric", (DL_FUNC) &_squarebrackets_rcpp_setrv_fast_Numeric, 4},
    {"_squarebrackets_rcpp_setrv_safe_Character", (DL_FUNC) &_squarebrackets_rcpp_setrv_safe_Character, 4},
    {"_squarebrackets_rcpp_setrv_fast_Character", (DL_FUNC) &_squarebrackets_rcpp_setrv_fast_Character, 4},
    {"_squarebrackets_rcpp_setrv_safe_Raw", (DL_FUNC) &_squarebrackets_rcpp_setrv_safe_Raw, 4},
    {"_squarebrackets_rcpp_setrv_fast_Raw", (DL_FUNC) &_squarebrackets_rcpp_setrv_fast_Raw, 4},
    {"_squarebrackets_rcpp_sub2ind_2d", (DL_FUNC) &_squarebrackets_rcpp_sub2ind_2d, 3},
    {"_squarebrackets_rcpp_sub2ind_3d", (DL_FUNC) &_squarebrackets_rcpp_sub2ind_3d, 4},
    {"_squarebrackets_rcpp_sub2ind_4d", (DL_FUNC) &_squarebrackets_rcpp_sub2ind_4d, 5},
    {"_squarebrackets_rcpp_sub2ind_5d", (DL_FUNC) &_squarebrackets_rcpp_sub2ind_5d, 6},
    {"_squarebrackets_rcpp_sub2ind_6d", (DL_FUNC) &_squarebrackets_rcpp_sub2ind_6d, 7},
    {"_squarebrackets_rcpp_abind_all_conform_dims", (DL_FUNC) &_squarebrackets_rcpp_abind_all_conform_dims, 4},
    {"_squarebrackets_rcpp_abind_get_maxdims", (DL_FUNC) &_squarebrackets_rcpp_abind_get_maxdims, 1},
    {"_squarebrackets_rcpp_abind_check_conform_dims", (DL_FUNC) &_squarebrackets_rcpp_abind_check_conform_dims, 4},
    {"_squarebrackets_rcpp_abind_get_dimnames", (DL_FUNC) &_squarebrackets_rcpp_abind_get_dimnames, 2},
    {"_squarebrackets_rcpp_address", (DL_FUNC) &_squarebrackets_rcpp_address, 1},
    {"_squarebrackets_rcpp_list_bindings", (DL_FUNC) &_squarebrackets_rcpp_list_bindings, 3},
    {"_squarebrackets_rcpp_all_addresses", (DL_FUNC) &_squarebrackets_rcpp_all_addresses, 2},
    {"_squarebrackets_rcpp_address_in_env", (DL_FUNC) &_squarebrackets_rcpp_address_in_env, 3},
    {"_squarebrackets_rcpp_anybad", (DL_FUNC) &_squarebrackets_rcpp_anybad, 2},
    {"_squarebrackets_rcpp_prod_int", (DL_FUNC) &_squarebrackets_rcpp_prod_int, 1},
    {"_squarebrackets_rcpp_pre_coord2ind", (DL_FUNC) &_squarebrackets_rcpp_pre_coord2ind, 3},
    {"_squarebrackets_rcpp_coord2ind", (DL_FUNC) &_squarebrackets_rcpp_coord2ind, 3},
    {"_squarebrackets_rcpp_sb_str", (DL_FUNC) &_squarebrackets_rcpp_sb_str, 2},
    {"_squarebrackets_rcpp_sb_str_rp", (DL_FUNC) &_squarebrackets_rcpp_sb_str_rp, 4},
    {"_squarebrackets_rcpp_seq_mlen", (DL_FUNC) &_squarebrackets_rcpp_seq_mlen, 1},
    {"_squarebrackets_rcpp_recycle_seq_mlen", (DL_FUNC) &_squarebrackets_rcpp_recycle_seq_mlen, 2},
    {"_squarebrackets_rcpp_set_namepointer", (DL_FUNC) &_squarebrackets_rcpp_set_namepointer, 3},
    {"_squarebrackets_rcpp_setvind_Complex", (DL_FUNC) &_squarebrackets_rcpp_setvind_Complex, 3},
    {"_squarebrackets_rcpp_sub2ind_general", (DL_FUNC) &_squarebrackets_rcpp_sub2ind_general, 6},
    {"C_any_badindx", (DL_FUNC) &C_any_badindx, 2},
    {"C_any_nonpos",  (DL_FUNC) &C_any_nonpos,  2},
    {NULL, NULL, 0}
};

RcppExport void R_init_squarebrackets(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
