// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_set_rowcol_bool
void rcpp_set_rowcol_bool(LogicalMatrix x, IntegerVector rowind, IntegerVector colind, LogicalVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_rowcol_bool(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type rp(rpSEXP);
    rcpp_set_rowcol_bool(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_rowcol_bool1
void rcpp_set_rowcol_bool1(LogicalMatrix x, IntegerVector rowind, IntegerVector colind, bool rp);
RcppExport SEXP _squarebrackets_rcpp_set_rowcol_bool1(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< bool >::type rp(rpSEXP);
    rcpp_set_rowcol_bool1(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_row_bool
void rcpp_set_row_bool(LogicalMatrix x, IntegerVector rowind, LogicalVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_row_bool(SEXP xSEXP, SEXP rowindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type rp(rpSEXP);
    rcpp_set_row_bool(x, rowind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_row_bool1
void rcpp_set_row_bool1(LogicalMatrix x, IntegerVector rowind, bool rp);
RcppExport SEXP _squarebrackets_rcpp_set_row_bool1(SEXP xSEXP, SEXP rowindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< bool >::type rp(rpSEXP);
    rcpp_set_row_bool1(x, rowind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_col_bool
void rcpp_set_col_bool(LogicalMatrix x, IntegerVector colind, LogicalVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_col_bool(SEXP xSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type rp(rpSEXP);
    rcpp_set_col_bool(x, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_col_bool1
void rcpp_set_col_bool1(LogicalMatrix x, IntegerVector colind, bool rp);
RcppExport SEXP _squarebrackets_rcpp_set_col_bool1(SEXP xSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< bool >::type rp(rpSEXP);
    rcpp_set_col_bool1(x, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_rowcol_int
void rcpp_set_rowcol_int(IntegerMatrix x, IntegerVector rowind, IntegerVector colind, IntegerVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_rowcol_int(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp(rpSEXP);
    rcpp_set_rowcol_int(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_rowcol_int1
void rcpp_set_rowcol_int1(IntegerMatrix x, IntegerVector rowind, IntegerVector colind, int rp);
RcppExport SEXP _squarebrackets_rcpp_set_rowcol_int1(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< int >::type rp(rpSEXP);
    rcpp_set_rowcol_int1(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_row_int
void rcpp_set_row_int(IntegerMatrix x, IntegerVector rowind, IntegerVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_row_int(SEXP xSEXP, SEXP rowindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp(rpSEXP);
    rcpp_set_row_int(x, rowind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_row_int1
void rcpp_set_row_int1(IntegerMatrix x, IntegerVector rowind, int rp);
RcppExport SEXP _squarebrackets_rcpp_set_row_int1(SEXP xSEXP, SEXP rowindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< int >::type rp(rpSEXP);
    rcpp_set_row_int1(x, rowind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_col_int
void rcpp_set_col_int(IntegerMatrix x, IntegerVector colind, IntegerVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_col_int(SEXP xSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp(rpSEXP);
    rcpp_set_col_int(x, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_col_int1
void rcpp_set_col_int1(IntegerMatrix x, IntegerVector colind, int rp);
RcppExport SEXP _squarebrackets_rcpp_set_col_int1(SEXP xSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< int >::type rp(rpSEXP);
    rcpp_set_col_int1(x, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_rowcol_double
void rcpp_set_rowcol_double(NumericMatrix x, IntegerVector rowind, IntegerVector colind, NumericVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_rowcol_double(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    rcpp_set_rowcol_double(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_rowcol_double1
void rcpp_set_rowcol_double1(NumericMatrix x, IntegerVector rowind, IntegerVector colind, double rp);
RcppExport SEXP _squarebrackets_rcpp_set_rowcol_double1(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< double >::type rp(rpSEXP);
    rcpp_set_rowcol_double1(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_row_double
void rcpp_set_row_double(NumericMatrix x, IntegerVector rowind, NumericVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_row_double(SEXP xSEXP, SEXP rowindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    rcpp_set_row_double(x, rowind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_row_double1
void rcpp_set_row_double1(NumericMatrix x, IntegerVector rowind, double rp);
RcppExport SEXP _squarebrackets_rcpp_set_row_double1(SEXP xSEXP, SEXP rowindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< double >::type rp(rpSEXP);
    rcpp_set_row_double1(x, rowind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_col_double
void rcpp_set_col_double(NumericMatrix x, IntegerVector colind, NumericVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_col_double(SEXP xSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    rcpp_set_col_double(x, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_col_double1
void rcpp_set_col_double1(NumericMatrix x, IntegerVector colind, double rp);
RcppExport SEXP _squarebrackets_rcpp_set_col_double1(SEXP xSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< double >::type rp(rpSEXP);
    rcpp_set_col_double1(x, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_rowcol_String
void rcpp_set_rowcol_String(CharacterMatrix x, IntegerVector rowind, IntegerVector colind, CharacterVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_rowcol_String(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rp(rpSEXP);
    rcpp_set_rowcol_String(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_rowcol_String1
void rcpp_set_rowcol_String1(CharacterMatrix x, IntegerVector rowind, IntegerVector colind, String rp);
RcppExport SEXP _squarebrackets_rcpp_set_rowcol_String1(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< String >::type rp(rpSEXP);
    rcpp_set_rowcol_String1(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_row_String
void rcpp_set_row_String(CharacterMatrix x, IntegerVector rowind, CharacterVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_row_String(SEXP xSEXP, SEXP rowindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rp(rpSEXP);
    rcpp_set_row_String(x, rowind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_row_String1
void rcpp_set_row_String1(CharacterMatrix x, IntegerVector rowind, String rp);
RcppExport SEXP _squarebrackets_rcpp_set_row_String1(SEXP xSEXP, SEXP rowindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< String >::type rp(rpSEXP);
    rcpp_set_row_String1(x, rowind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_col_String
void rcpp_set_col_String(CharacterMatrix x, IntegerVector colind, CharacterVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_col_String(SEXP xSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rp(rpSEXP);
    rcpp_set_col_String(x, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_col_String1
void rcpp_set_col_String1(CharacterMatrix x, IntegerVector colind, String rp);
RcppExport SEXP _squarebrackets_rcpp_set_col_String1(SEXP xSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< String >::type rp(rpSEXP);
    rcpp_set_col_String1(x, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_rowcol_Rcomplex
void rcpp_set_rowcol_Rcomplex(ComplexMatrix x, IntegerVector rowind, IntegerVector colind, ComplexVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_rowcol_Rcomplex(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type rp(rpSEXP);
    rcpp_set_rowcol_Rcomplex(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_rowcol_Rcomplex1
void rcpp_set_rowcol_Rcomplex1(ComplexMatrix x, IntegerVector rowind, IntegerVector colind, Rcomplex rp);
RcppExport SEXP _squarebrackets_rcpp_set_rowcol_Rcomplex1(SEXP xSEXP, SEXP rowindSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< Rcomplex >::type rp(rpSEXP);
    rcpp_set_rowcol_Rcomplex1(x, rowind, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_row_Rcomplex
void rcpp_set_row_Rcomplex(ComplexMatrix x, IntegerVector rowind, ComplexVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_row_Rcomplex(SEXP xSEXP, SEXP rowindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type rp(rpSEXP);
    rcpp_set_row_Rcomplex(x, rowind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_row_Rcomplex1
void rcpp_set_row_Rcomplex1(ComplexMatrix x, IntegerVector rowind, Rcomplex rp);
RcppExport SEXP _squarebrackets_rcpp_set_row_Rcomplex1(SEXP xSEXP, SEXP rowindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rowind(rowindSEXP);
    Rcpp::traits::input_parameter< Rcomplex >::type rp(rpSEXP);
    rcpp_set_row_Rcomplex1(x, rowind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_col_Rcomplex
void rcpp_set_col_Rcomplex(ComplexMatrix x, IntegerVector colind, ComplexVector rp);
RcppExport SEXP _squarebrackets_rcpp_set_col_Rcomplex(SEXP xSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< ComplexVector >::type rp(rpSEXP);
    rcpp_set_col_Rcomplex(x, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_col_Rcomplex1
void rcpp_set_col_Rcomplex1(ComplexMatrix x, IntegerVector colind, Rcomplex rp);
RcppExport SEXP _squarebrackets_rcpp_set_col_Rcomplex1(SEXP xSEXP, SEXP colindSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type colind(colindSEXP);
    Rcpp::traits::input_parameter< Rcomplex >::type rp(rpSEXP);
    rcpp_set_col_Rcomplex1(x, colind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_col_Logical
void rcpp_setapply_col_Logical(LogicalMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_col_Logical(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_col_Logical(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_row_Logical
void rcpp_setapply_row_Logical(LogicalMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_row_Logical(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_row_Logical(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_col_Integer
void rcpp_setapply_col_Integer(IntegerMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_col_Integer(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_col_Integer(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_row_Integer
void rcpp_setapply_row_Integer(IntegerMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_row_Integer(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_row_Integer(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_col_Numeric
void rcpp_setapply_col_Numeric(NumericMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_col_Numeric(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_col_Numeric(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_row_Numeric
void rcpp_setapply_row_Numeric(NumericMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_row_Numeric(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_row_Numeric(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_col_Character
void rcpp_setapply_col_Character(CharacterMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_col_Character(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_col_Character(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_row_Character
void rcpp_setapply_row_Character(CharacterMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_row_Character(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_row_Character(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_col_Complex
void rcpp_setapply_col_Complex(ComplexMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_col_Complex(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_col_Complex(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_setapply_row_Complex
void rcpp_setapply_row_Complex(ComplexMatrix x, Function f);
RcppExport SEXP _squarebrackets_rcpp_setapply_row_Complex(SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ComplexMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_setapply_row_Complex(x, f);
    return R_NilValue;
END_RCPP
}
// rcpp_address
String rcpp_address(SEXP x);
RcppExport SEXP _squarebrackets_rcpp_address(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_address(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_list_bindings
CharacterVector rcpp_list_bindings(String ref_address, Environment env, CharacterVector ls);
RcppExport SEXP _squarebrackets_rcpp_list_bindings(SEXP ref_addressSEXP, SEXP envSEXP, SEXP lsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type ref_address(ref_addressSEXP);
    Rcpp::traits::input_parameter< Environment >::type env(envSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type ls(lsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_list_bindings(ref_address, env, ls));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_all_addresses
CharacterVector rcpp_all_addresses(Environment env, CharacterVector ls);
RcppExport SEXP _squarebrackets_rcpp_all_addresses(SEXP envSEXP, SEXP lsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type env(envSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type ls(lsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_all_addresses(env, ls));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_address_in_env
bool rcpp_address_in_env(String ref_address, Environment env, CharacterVector ls);
RcppExport SEXP _squarebrackets_rcpp_address_in_env(SEXP ref_addressSEXP, SEXP envSEXP, SEXP lsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type ref_address(ref_addressSEXP);
    Rcpp::traits::input_parameter< Environment >::type env(envSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type ls(lsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_address_in_env(ref_address, env, ls));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_anybad
bool rcpp_anybad(IntegerVector indx, int value);
RcppExport SEXP _squarebrackets_rcpp_anybad(SEXP indxSEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type indx(indxSEXP);
    Rcpp::traits::input_parameter< int >::type value(valueSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_anybad(indx, value));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sb_str
std::string rcpp_sb_str(std::string x, IntegerVector ind);
RcppExport SEXP _squarebrackets_rcpp_sb_str(SEXP xSEXP, SEXP indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind(indSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sb_str(x, ind));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sb_str_rp
std::string rcpp_sb_str_rp(std::string x, IntegerVector ind, std::string rp_x, IntegerVector rp_ind);
RcppExport SEXP _squarebrackets_rcpp_sb_str_rp(SEXP xSEXP, SEXP indSEXP, SEXP rp_xSEXP, SEXP rp_indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind(indSEXP);
    Rcpp::traits::input_parameter< std::string >::type rp_x(rp_xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rp_ind(rp_indSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sb_str_rp(x, ind, rp_x, rp_ind));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_mlen
List rcpp_mlen(IntegerVector x);
RcppExport SEXP _squarebrackets_rcpp_mlen(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_mlen(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_seq_rec
NumericVector rcpp_seq_rec(NumericVector inits, int w, int n, Function f);
RcppExport SEXP _squarebrackets_rcpp_seq_rec(SEXP initsSEXP, SEXP wSEXP, SEXP nSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type inits(initsSEXP);
    Rcpp::traits::input_parameter< int >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_seq_rec(inits, w, n, f));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sub2ind_2d
IntegerVector rcpp_sub2ind_2d(IntegerVector ind1, IntegerVector ind2, IntegerVector dimcumprod);
RcppExport SEXP _squarebrackets_rcpp_sub2ind_2d(SEXP ind1SEXP, SEXP ind2SEXP, SEXP dimcumprodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sub2ind_2d(ind1, ind2, dimcumprod));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sub2ind_3d
IntegerVector rcpp_sub2ind_3d(IntegerVector ind1, IntegerVector ind2, Rcpp::IntegerVector ind3, IntegerVector dimcumprod);
RcppExport SEXP _squarebrackets_rcpp_sub2ind_3d(SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP dimcumprodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sub2ind_3d(ind1, ind2, ind3, dimcumprod));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sub2ind_4d
IntegerVector rcpp_sub2ind_4d(IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector dimcumprod);
RcppExport SEXP _squarebrackets_rcpp_sub2ind_4d(SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP dimcumprodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sub2ind_4d(ind1, ind2, ind3, ind4, dimcumprod));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sub2ind_5d
IntegerVector rcpp_sub2ind_5d(IntegerVector ind1, IntegerVector ind2, IntegerVector ind3, IntegerVector ind4, IntegerVector ind5, IntegerVector dimcumprod);
RcppExport SEXP _squarebrackets_rcpp_sub2ind_5d(SEXP ind1SEXP, SEXP ind2SEXP, SEXP ind3SEXP, SEXP ind4SEXP, SEXP ind5SEXP, SEXP dimcumprodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type ind1(ind1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind2(ind2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind3(ind3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind4(ind4SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ind5(ind5SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sub2ind_5d(ind1, ind2, ind3, ind4, ind5, dimcumprod));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sub2ind_general
IntegerVector rcpp_sub2ind_general(List lst, int total, IntegerVector reps_each, IntegerVector reps_whole, IntegerVector xdim, IntegerVector dimcumprod);
RcppExport SEXP _squarebrackets_rcpp_sub2ind_general(SEXP lstSEXP, SEXP totalSEXP, SEXP reps_eachSEXP, SEXP reps_wholeSEXP, SEXP xdimSEXP, SEXP dimcumprodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type lst(lstSEXP);
    Rcpp::traits::input_parameter< int >::type total(totalSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type reps_each(reps_eachSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type reps_whole(reps_wholeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type xdim(xdimSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dimcumprod(dimcumprodSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sub2ind_general(lst, total, reps_each, reps_whole, xdim, dimcumprod));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP C_any_badindx(void *, void *);
RcppExport SEXP C_any_nonpos(void *, void *);

static const R_CallMethodDef CallEntries[] = {
    {"_squarebrackets_rcpp_set_rowcol_bool", (DL_FUNC) &_squarebrackets_rcpp_set_rowcol_bool, 4},
    {"_squarebrackets_rcpp_set_rowcol_bool1", (DL_FUNC) &_squarebrackets_rcpp_set_rowcol_bool1, 4},
    {"_squarebrackets_rcpp_set_row_bool", (DL_FUNC) &_squarebrackets_rcpp_set_row_bool, 3},
    {"_squarebrackets_rcpp_set_row_bool1", (DL_FUNC) &_squarebrackets_rcpp_set_row_bool1, 3},
    {"_squarebrackets_rcpp_set_col_bool", (DL_FUNC) &_squarebrackets_rcpp_set_col_bool, 3},
    {"_squarebrackets_rcpp_set_col_bool1", (DL_FUNC) &_squarebrackets_rcpp_set_col_bool1, 3},
    {"_squarebrackets_rcpp_set_rowcol_int", (DL_FUNC) &_squarebrackets_rcpp_set_rowcol_int, 4},
    {"_squarebrackets_rcpp_set_rowcol_int1", (DL_FUNC) &_squarebrackets_rcpp_set_rowcol_int1, 4},
    {"_squarebrackets_rcpp_set_row_int", (DL_FUNC) &_squarebrackets_rcpp_set_row_int, 3},
    {"_squarebrackets_rcpp_set_row_int1", (DL_FUNC) &_squarebrackets_rcpp_set_row_int1, 3},
    {"_squarebrackets_rcpp_set_col_int", (DL_FUNC) &_squarebrackets_rcpp_set_col_int, 3},
    {"_squarebrackets_rcpp_set_col_int1", (DL_FUNC) &_squarebrackets_rcpp_set_col_int1, 3},
    {"_squarebrackets_rcpp_set_rowcol_double", (DL_FUNC) &_squarebrackets_rcpp_set_rowcol_double, 4},
    {"_squarebrackets_rcpp_set_rowcol_double1", (DL_FUNC) &_squarebrackets_rcpp_set_rowcol_double1, 4},
    {"_squarebrackets_rcpp_set_row_double", (DL_FUNC) &_squarebrackets_rcpp_set_row_double, 3},
    {"_squarebrackets_rcpp_set_row_double1", (DL_FUNC) &_squarebrackets_rcpp_set_row_double1, 3},
    {"_squarebrackets_rcpp_set_col_double", (DL_FUNC) &_squarebrackets_rcpp_set_col_double, 3},
    {"_squarebrackets_rcpp_set_col_double1", (DL_FUNC) &_squarebrackets_rcpp_set_col_double1, 3},
    {"_squarebrackets_rcpp_set_rowcol_String", (DL_FUNC) &_squarebrackets_rcpp_set_rowcol_String, 4},
    {"_squarebrackets_rcpp_set_rowcol_String1", (DL_FUNC) &_squarebrackets_rcpp_set_rowcol_String1, 4},
    {"_squarebrackets_rcpp_set_row_String", (DL_FUNC) &_squarebrackets_rcpp_set_row_String, 3},
    {"_squarebrackets_rcpp_set_row_String1", (DL_FUNC) &_squarebrackets_rcpp_set_row_String1, 3},
    {"_squarebrackets_rcpp_set_col_String", (DL_FUNC) &_squarebrackets_rcpp_set_col_String, 3},
    {"_squarebrackets_rcpp_set_col_String1", (DL_FUNC) &_squarebrackets_rcpp_set_col_String1, 3},
    {"_squarebrackets_rcpp_set_rowcol_Rcomplex", (DL_FUNC) &_squarebrackets_rcpp_set_rowcol_Rcomplex, 4},
    {"_squarebrackets_rcpp_set_rowcol_Rcomplex1", (DL_FUNC) &_squarebrackets_rcpp_set_rowcol_Rcomplex1, 4},
    {"_squarebrackets_rcpp_set_row_Rcomplex", (DL_FUNC) &_squarebrackets_rcpp_set_row_Rcomplex, 3},
    {"_squarebrackets_rcpp_set_row_Rcomplex1", (DL_FUNC) &_squarebrackets_rcpp_set_row_Rcomplex1, 3},
    {"_squarebrackets_rcpp_set_col_Rcomplex", (DL_FUNC) &_squarebrackets_rcpp_set_col_Rcomplex, 3},
    {"_squarebrackets_rcpp_set_col_Rcomplex1", (DL_FUNC) &_squarebrackets_rcpp_set_col_Rcomplex1, 3},
    {"_squarebrackets_rcpp_setapply_col_Logical", (DL_FUNC) &_squarebrackets_rcpp_setapply_col_Logical, 2},
    {"_squarebrackets_rcpp_setapply_row_Logical", (DL_FUNC) &_squarebrackets_rcpp_setapply_row_Logical, 2},
    {"_squarebrackets_rcpp_setapply_col_Integer", (DL_FUNC) &_squarebrackets_rcpp_setapply_col_Integer, 2},
    {"_squarebrackets_rcpp_setapply_row_Integer", (DL_FUNC) &_squarebrackets_rcpp_setapply_row_Integer, 2},
    {"_squarebrackets_rcpp_setapply_col_Numeric", (DL_FUNC) &_squarebrackets_rcpp_setapply_col_Numeric, 2},
    {"_squarebrackets_rcpp_setapply_row_Numeric", (DL_FUNC) &_squarebrackets_rcpp_setapply_row_Numeric, 2},
    {"_squarebrackets_rcpp_setapply_col_Character", (DL_FUNC) &_squarebrackets_rcpp_setapply_col_Character, 2},
    {"_squarebrackets_rcpp_setapply_row_Character", (DL_FUNC) &_squarebrackets_rcpp_setapply_row_Character, 2},
    {"_squarebrackets_rcpp_setapply_col_Complex", (DL_FUNC) &_squarebrackets_rcpp_setapply_col_Complex, 2},
    {"_squarebrackets_rcpp_setapply_row_Complex", (DL_FUNC) &_squarebrackets_rcpp_setapply_row_Complex, 2},
    {"_squarebrackets_rcpp_address", (DL_FUNC) &_squarebrackets_rcpp_address, 1},
    {"_squarebrackets_rcpp_list_bindings", (DL_FUNC) &_squarebrackets_rcpp_list_bindings, 3},
    {"_squarebrackets_rcpp_all_addresses", (DL_FUNC) &_squarebrackets_rcpp_all_addresses, 2},
    {"_squarebrackets_rcpp_address_in_env", (DL_FUNC) &_squarebrackets_rcpp_address_in_env, 3},
    {"_squarebrackets_rcpp_anybad", (DL_FUNC) &_squarebrackets_rcpp_anybad, 2},
    {"_squarebrackets_rcpp_sb_str", (DL_FUNC) &_squarebrackets_rcpp_sb_str, 2},
    {"_squarebrackets_rcpp_sb_str_rp", (DL_FUNC) &_squarebrackets_rcpp_sb_str_rp, 4},
    {"_squarebrackets_rcpp_mlen", (DL_FUNC) &_squarebrackets_rcpp_mlen, 1},
    {"_squarebrackets_rcpp_seq_rec", (DL_FUNC) &_squarebrackets_rcpp_seq_rec, 4},
    {"_squarebrackets_rcpp_sub2ind_2d", (DL_FUNC) &_squarebrackets_rcpp_sub2ind_2d, 3},
    {"_squarebrackets_rcpp_sub2ind_3d", (DL_FUNC) &_squarebrackets_rcpp_sub2ind_3d, 4},
    {"_squarebrackets_rcpp_sub2ind_4d", (DL_FUNC) &_squarebrackets_rcpp_sub2ind_4d, 5},
    {"_squarebrackets_rcpp_sub2ind_5d", (DL_FUNC) &_squarebrackets_rcpp_sub2ind_5d, 6},
    {"_squarebrackets_rcpp_sub2ind_general", (DL_FUNC) &_squarebrackets_rcpp_sub2ind_general, 6},
    {"C_any_badindx", (DL_FUNC) &C_any_badindx, 2},
    {"C_any_nonpos",  (DL_FUNC) &C_any_nonpos,  2},
    {NULL, NULL, 0}
};

RcppExport void R_init_squarebrackets(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
