% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_mutable.atomic.R
\name{class_mutable_atomic}
\alias{class_mutable_atomic}
\alias{mutable_atomic}
\alias{as.mutable_atomic}
\alias{is.mutable_atomic}
\alias{[.mutable_atomic}
\alias{[<-.mutable_atomic}
\alias{format.mutable_atomic}
\alias{print.mutable_atomic}
\title{Mutable Atomic Classes}
\usage{
mutable_atomic(data, names = NULL, dim = NULL, dimnames = NULL)

as.mutable_atomic(x, ...)

is.mutable_atomic(x)

\method{[}{mutable_atomic}(x, ...)

\method{[}{mutable_atomic}(x, ...) <- value

\method{format}{mutable_atomic}(x, ...)

\method{print}{mutable_atomic}(x, ...)
}
\arguments{
\item{data}{atomic vector giving data to fill the \code{mutable_atomic} object.}

\item{names, dim, dimnames}{see \link[stats]{setNames} and \link[base]{array}.}

\item{x}{an atomic object.}

\item{...}{method dependent arguments.}

\item{value}{see \link[base]{Extract}.}
}
\value{
\code{as.mutable_atomic} converts an atomic object (vector, matrix, array)
to the same object, but with additional class \code{"mutable_atomic"},
and the additional attribute \code{"typeof"}. \cr
\cr
\code{is.mutable_atomic} returns \code{TRUE} if the object is atomic, has
the class \code{"mutable_atomic"}, \bold{and} has the correctly set attribute \code{"typeof"}; \cr
\code{is.mutable_atomic} returns \code{FALSE} otherwise.
}
\description{
The \code{mutable_atomic} class is a mutable version of atomic classes. \cr
It works exactly the same in all aspects as regular atomic classes,
with only one real difference: \cr
\link{sb_set} accepts \code{mutable_atomic}, but does not accept regular \code{atomic}. \cr
See \link{squarebrackets_PassByReference} for details. \cr
\cr
Like \code{data.table}, \verb{[<-} performs R's default copy-on-modification semantics. \cr
For modification  by reference, use \link{sb_set}. \cr
\cr
The \code{is.mutable_atomic()} function checks if an object is atomic.
}
\section{Warning}{


Always use \code{mutable_atomic()} or \code{as.mutable_atomic} to create a mutable object. \cr
Do NOT attempt to manually create a mutable atomic object by tweaking attributes: \cr
\code{mutable_atomic()} and \code{as.mutable_atomic} make some necessary checks so that other functions,
such as \link{sb_set},
don't have to spend computation time to perform these checks also. \cr
Circumventing these checks may break things. \cr \cr
}

\examples{

x <- mutable_atomic(1:20, dim = c(5,4), dimnames = list(letters[1:5], letters[1:4]))
x

x <- matrix(1:10, ncol = 2)
x <- as.mutable_atomic(x)
is.mutable_atomic(x)
print(x)
x[,1]
x[] <- as.double(x) # notifies the user a copy is being made
print(x) # "typeof" attribute adjusted accordingly, and class still present



}
