% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/special.R
\name{sb_special}
\alias{sb_special}
\alias{sb_str}
\alias{sb_a}
\title{Specialized Sub-setting Functions}
\usage{
sb_str(str, ind, rp.str, rp.ind)

sb_a(x, a = NULL)
}
\arguments{
\item{str}{a single string.}

\item{ind}{an integer vector, giving the positions of the string to subset.}

\item{rp.str, rp.ind}{similar to \code{str} and \code{ind}, respectively. \cr
If not specified, \code{sb_str()} will perform something like \cr
\code{str[ind]} \cr
treating \code{str} as an iterable vector. \cr
If these ARE specified, \code{sb_str()} will perform something like \cr
\code{str[ind] <- rp.str[rp.ind]} \cr
treating \code{str} and \code{rp.str} as iterable vectors. \cr}

\item{x}{an object}

\item{a}{a character vector of attribute names.
If \code{NULL} (default), ALL attributes are returned.}
}
\value{
The sub-setted object.
}
\description{
The \code{sb_a()} function subsets extracts one or more attributes from an object. \cr
\cr
The \code{sb_str()} function subsets characters of single string,
or replace a subset of the characters of a single string with the subsets of the characters of another string.
In both cases, a single string is treated as a iterable vector,
where each single character in a string is a single element.
The \code{sb_str()} function is considerably faster than doing the equivalent operation
in base 'R' or even 'stringi'. \cr
\cr
}
\examples{

x <- matrix(1:10, ncol = 2)
colnames(x) <- c("a", "b")
attr(x, "test") <- "test"
sb_a(x, "test")
sb_a(x)


x <- "hello"
sb_str(x, 5:1) # this gives "olleh"
sb_str(x, c(1:5, 5)) # this gives "helloo"
sb_str(x, c(2:5)) # this gives "ello"
sb_str(x, seq(1, 5, by = 2)) # this gives "hlo"
sb_str(x, 1:4, "world", 1:4) # this gives "worlo"

}
