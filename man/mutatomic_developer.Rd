% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutatomic_developer.R
\name{stopifnot_ma_safe2mutate}
\alias{stopifnot_ma_safe2mutate}
\alias{address}
\alias{.internal_set_ma}
\title{Developer Functions for the mutatomic Class}
\usage{
stopifnot_ma_safe2mutate(sym, envir, .abortcall)

address(x)

.internal_set_ma(x)
}
\arguments{
\item{sym}{the symbol of the object; i.e. \code{substitute(x)}.}

\item{envir}{the environment where the object resides; i.e. \code{parent.frame(n = 1)}.}

\item{.abortcall}{environment where the error message is passed to.}

\item{x}{atomic object}
}
\value{
Nothing. Only gives an error if the object is not safe to mutate.
}
\description{
The \code{stopifnot_ma_safe2mutate()} function
checks if an atomic object is actually safe to mutate. \cr
The \code{.internal_set_ma()} function
sets an object to class 'mutatomic' by reference. \cr
}
\examples{


testfun1 <- function(x) {
  .internal_set_ma(x)
}


x <- 1:10
is.mutatomic(x)

testfun1(x)
is.mutatomic(x)
print(x)


}
