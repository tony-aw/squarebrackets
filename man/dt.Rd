% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dt.R
\name{dt}
\alias{dt}
\alias{dt_aggregate}
\alias{dt_setcoe}
\alias{dt_setrm}
\alias{dt_setadd}
\title{Functional forms of data.table Operations (also work on tidytables)}
\usage{
dt_aggregate(x, SDcols = NULL, f, by, order_by = FALSE)

dt_setcoe(x, col = NULL, vars = NULL, f, chkdup = TRUE)

dt_setrm(x, col = NULL, vars = NULL, chkdup = TRUE)

dt_setadd(x, new)
}
\arguments{
\item{x}{a \code{data.table} or \code{tidytable}.}

\item{SDcols}{atomic vector,
giving the columns to which the aggregation function \code{f()} is to be applied on.}

\item{f}{the aggregation function}

\item{by}{atomic vector,
giving the grouping columns.}

\item{order_by}{logical (\code{TRUE} or \code{FALSE}),
indicating if the aggregated result should be ordered by the columns specified in \code{by}.}

\item{col, vars}{columns to select for coercion; see \link{squarebrackets_indx_args}. \cr
Duplicates are not allowed.}

\item{chkdup}{see \link{squarebrackets_duplicates}.}

\item{new}{a \code{data.table} or \code{tidytable}. \cr
It must have column names that do not already exist in \code{x}.}
}
\value{
For \code{dt_aggregate()}: \cr
The aggregated \code{data.table} object. \cr
\cr
For the rest of the functions: \cr
Returns: VOID. These functions modify the object by reference. \cr
Do NOT use assignment like \code{x <- dt_setcoe(x, ...)}. \cr
Since these functions return void, you'll just get \code{NULL}. \cr \cr
}
\description{
Functional forms of special data.table operations - ALL programmatically friendly
(no Non-Standard Evaluation). \cr
\cr
\code{dt_aggregate()}
aggregates a data.table or tidytable, and returns the aggregated copy. \cr
\code{dt_setcoe()}
coercively transforms columns of a data.table or tidytable
using \link[=squarebrackets_PassByReference]{pass-by-reference semantics}. \cr
\code{dt_setrm()}
removes columns of a data.table or tidytable
using \link[=squarebrackets_PassByReference]{pass-by-reference semantics}. \cr
\code{dt_setadd(x, new)}
adds the columns from data.table \code{new} to data.table \code{x},
thereby modifying \code{x}
using \link[=squarebrackets_PassByReference]{pass-by-reference semantics}. \cr \cr
}
\examples{
\dontshow{if (requireNamespace("sf")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
requireNamespace("sf")


# dt_aggregate on sf-data.table ====

x <- sf::st_read(system.file("shape/nc.shp", package = "sf"))
x <- data.table::as.data.table(x)

x$region <- ifelse(x$CNTY_ID <= 2000, 'high', 'low')
d.aggr <- dt_aggregate(
  x, SDcols = "geometry", f= sf::st_union, by = "region"
)

head(d.aggr)


#############################################################################


# dt_setcoe ====

obj <- data.table::data.table(a = 1:10, b = letters[1:10], c = 11:20, d = factor(letters[1:10]))
str(obj) # notice that columns "a" and "c" are INTEGER (`int`)
sb_set(
  obj, filter = ~ (a >= 2) & (c <= 17), vars = is.numeric,
  tf = sqrt # WARNING: sqrt() results in `dbl`, but columns are `int`, so decimals lost
)
str(obj)
obj <- data.table::data.table(a = 1:10, b = letters[1:10], c = 11:20, d = factor(letters[1:10]))
dt_setcoe(obj, vars = is.numeric, f = as.numeric) # integers are now numeric
str(obj)
sb_set(obj,
  filter = ~ (a >= 2) & (c <= 17), vars = is.numeric,
  tf = sqrt # SAFE: coercion performed; so no warnings
) 
str(obj)



#############################################################################


# dt_setrm ====

obj <- data.table::data.table(
  a = 1:10, b = letters[1:10], c = 11:20, d = factor(letters[1:10])
)
str(obj)
dt_setrm(obj, col = 1)
str(obj)

obj <- data.table::data.table(
  a = 1:10, b = letters[1:10], c = 11:20, d = factor(letters[1:10])
)
str(obj)
dt_setrm(obj, vars = is.numeric)
str(obj)

#############################################################################


# dt_setadd ====

obj <- data.table::data.table(
  a = 1:10, b = letters[1:10], c = 11:20, d = factor(letters[1:10])
)
new <- data.table::data.table(
  e = sample(c(TRUE, FALSE), 10, TRUE),
  f = sample(c(TRUE, FALSE), 10, TRUE)
)
dt_setadd(obj, new)
print(obj)

\dontshow{\}) # examplesIf}
}
