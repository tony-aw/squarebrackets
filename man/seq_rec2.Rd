% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seq_rec2.R
\name{seq_rec2}
\alias{seq_rec2}
\title{Generate Recursive Sequence Through Repeated Arithmetic Infix Operations}
\usage{
seq_rec2(
  inits = c(0L, 1L),
  n = 10L,
  s = c(0L, 0L),
  m = c(1L, 1L),
  inop = "+",
  form = 1L,
  rev = FALSE
)
}
\arguments{
\item{inits}{a numeric (double or integer) vector of length \code{2},
giving the initial values. \cr
Any numbers are allowed, even negative and/or fractional numbers. \cr
Note that numbers given must give valid results when passed to function \code{f()}. \cr}

\item{n}{a single integer,
giving the size of the numeric vector to generate. \cr
NOTE: it must hold that \code{n > 2}.}

\item{s, m}{numeric vectors of length 2 to be used in the formula.}

\item{inop}{a single string,
giving the arithmetic infix operator to be used. \cr
Currently supported: "+", "-", "*", "/". \cr
For a fibonacci sequence, \code{inop = "+"}.}

\item{form}{either \code{1} or \code{2}, indicating which formula to be used
(see Description section above).}

\item{rev}{reverse the order of \code{x[i-1]} and \code{x[-2]}. \cr
For example, using \code{form = 1}:
\itemize{
\item If \code{rev = FALSE} (default), it holds: \cr
\code{x[i] = (s[1] + m[1] * x[i-1]) \%inop\% (s[2] + m[2] * x[i-2])}.
\item If \code{rev = TRUE}, it holds: \cr
\code{x[i] = (s[1] + m[1] * x[i-2]) \%inop\% (s[2] + m[2] * x[i-1])} \cr \cr
}}
}
\value{
A sequence of numbers. \cr \cr
}
\description{
This is a recursive sequence generator. \cr
The function is essentially a
highly generalized version of a Fibonacci sequence generator. \cr
\cr
Starting with 2 initial values,
each next value \code{i} is generated by either one of 2 formulas:
\enumerate{
\item \code{x[i] = (s[1] + m[1] * x[i-1]) \%inop\% (s[2] + m[2] * x[i-2])}
\item \code{x[i] = (m[1] * (x[i-1] + s[1])) \%inop\% (m[2] * (x[i-2] + s[2]))}
}

where \verb{\%inop\%} is the arithmetic infix operator chosen, \cr
and \code{m} and \code{s} are each a numeric vector of length 2. \cr
The order of \code{x[i-1]} and \code{x[i-2]} can also be swapped. \cr \cr
}
\details{
The default values of the arguments give the first 10 numbers
of a regular Fibonacci sequence. \cr
See examples for several number series created with this function. \cr
This function is written in C++ using \code{Rcpp} for better performance. \cr \cr
}
\note{
Do not supply \code{NA}s or \code{NaN}s to this function, as it cannot handle them. \cr \cr
}
\examples{

seq_rec2() # by default gives Fibonacci numbers
seq_rec2(inits = 2:1) # Lucas numbers
c(1, seq_rec2(c(1, 2), inop = "*")) # Multiplicative Fibonacci
seq_rec2(m = c(2L, 1L)) # Pell numbers
seq_rec2(inits = c(1, 0), m = c(0L, 2L)) # see https://oeis.org/A077957
seq_rec2(m = c(1L, 2L)) # Jacobsthal numbers

}
