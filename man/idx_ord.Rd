% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/idx_ord.R
\name{idx_ord_v}
\alias{idx_ord_v}
\alias{idx_ord_m}
\alias{idx_ord_df}
\title{Compute Ordered Indices}
\usage{
idx_ord_v(
  x,
  na.last = TRUE,
  decr = FALSE,
  method = c("auto", "shell", "radix")
)

idx_ord_m(
  x,
  margin,
  na.last = TRUE,
  decr = FALSE,
  method = c("auto", "shell", "radix")
)

idx_ord_df(
  x,
  na.last = TRUE,
  decr = FALSE,
  method = c("auto", "shell", "radix")
)
}
\arguments{
\item{x}{a vector, data.frame, or array}

\item{na.last, method}{see \link[base]{order} and \link[base]{sort}.}

\item{decr}{see argument \code{decreasing} in \link[base]{order}}

\item{margin}{the margin over which to cut the matrix/array into vectors. \cr
I.e. \code{margin = 1} will cut \code{x} into individual rows,
and apply the \link[base]{order} on those rows. \cr
And \code{margin = 2} will cut \code{x} into columns, etc.}
}
\value{
See \link[base]{order}.
}
\description{
Computes ordered indices.
Similar to \link[base]{order},
except the user must supply a vector,
a list of equal-length vectors,
a data.frame or a matrix (row-wise and column-wise are both supported),
as the input. \cr
\cr
For a vector \code{x},
\code{idx_ord_v(x)} is equivalent to \link[base]{order}\code{(x)}. \cr
\cr
For a data.frame or a list of equal-length vectors \code{x}, with \code{p} columns/elements,
\code{idx_ord_df(x)} is equivalent to \code{order(x[[1]], ..., x[[p]])}. \cr
\cr
For a matrix (or array) \code{x} with \code{p} rows,
\code{idx_ord_m(x, margin = 1)} is equivalent to \code{order(x[1, ], ..., x[p, ], ...)}. \cr
\cr
For a matrix (or array) \code{x} with \code{p} columns,
\code{idx_ord_m(x, margin = 2)} is equivalent to \code{order(x[, 1], ..., x[, p], ...)}. \cr
\cr
Note that these are merely a convenience functions,
and that these are actually slightly slower than \link[base]{order} (except for \code{idx_ord_v()}),
due to the additional functionality.
}
\examples{

# vectors ====
x <- sample(1:10)
order(x)
idx_ord_v(x)
idx_ord_m(rbind(x,x), 1)
idx_ord_m(cbind(x,x), 2)
idx_ord_df(data.frame(x,x))
 
}
