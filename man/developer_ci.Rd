% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ci.R
\name{developer_ci}
\alias{developer_ci}
\alias{ci_ii}
\alias{ci_margin}
\alias{ci_ss}
\alias{ci_df}
\alias{ci_obs}
\alias{ci_vars}
\title{Construct Indices}
\usage{
ci_ii(
  x,
  i,
  inv = FALSE,
  chkdup = FALSE,
  uniquely_named = FALSE,
  .abortcall = sys.call()
)

ci_margin(
  x,
  slice,
  margin,
  inv = FALSE,
  chkdup = FALSE,
  uniquely_named = FALSE,
  .abortcall = sys.call()
)

ci_ss(
  x,
  s,
  d,
  inv = FALSE,
  chkdup = FALSE,
  uniquely_named = FALSE,
  .abortcall = sys.call()
)

ci_df(
  x,
  slice,
  margin,
  inv = FALSE,
  chkdup = FALSE,
  uniquely_named = TRUE,
  .abortcall = sys.call()
)

ci_obs(
  x,
  obs,
  inv = FALSE,
  chkdup = FALSE,
  uniquely_named = TRUE,
  .abortcall = sys.call()
)

ci_vars(
  x,
  vars,
  inv = FALSE,
  chkdup = FALSE,
  uniquely_named = TRUE,
  .abortcall = sys.call()
)
}
\arguments{
\item{x}{the object for which the indices are meant.}

\item{i, s, d, slice, margin, obs, vars, inv}{See \link{squarebrackets_indx_args}. \cr}

\item{chkdup}{see \link{squarebrackets_options}. \cr
\ifelse{html}{\figure{for_performance-set_to_FALSE-red.svg}{options: alt='[for performance: set to FALSE]'}}{\link[=squarebrackets_help]{for performance: set to FALSE}} \cr}

\item{uniquely_named}{Boolean,
indicating if the user knows a-priori that the relevant names of \code{x} are unique. \cr
If set to \code{TRUE}, speed may increase. \cr
But specifying \code{TRUE} when the relevant names are not unique will result in incorrect output.}

\item{.abortcall}{environment where the error message is passed to.}
}
\value{
An integer vector of constructed indices.
}
\description{
These functions construct indices. \cr
\itemize{
\item \code{ci_ii()} constructs an integer vector flat/interior indices.
\item \code{ci_margin()} constructs an integer vector of indices for one particular dimension margin.
\item \code{ci_ss()} constructs a list of integer subscripts.
\item \code{ci_df()} is the same as \code{ci_margin()},
except it is specifically designed for data.frame-like objects. \cr
It is a separate function,
because things like \code{dimnames(x)[1]} and \code{rownames(x)}
do not always return the same output for certain data.frame-like objects.
\item \code{ci_obs()} and \code{ci_vars()} construct row and column indices,
respectively,
data.frame-like objects. \cr
}
}
\examples{

x <- matrix(1:25, 5, 5)
colnames(x) <- c("a", "a", "b", "c", "d")
print(x)

bool <- sample(c(TRUE, FALSE), 5, TRUE)
int <- 1:4
chr <- c("a", "a")
cplx <- 1:4 * -1i
tci_bool(bool, nrow(x))
tci_int(int, ncol(x), inv = TRUE)
tci_chr(chr, colnames(x))
tci_cplx(cplx, nrow(x))

ci_ii(x, 1:10 * -1i)
ci_margin(x, 1:4, 2)
ci_ss(x, n(1:5 * -1i, 1:4), 1:2)

}
